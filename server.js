// server.js (ESM) - CORRIGIDO E COMPLETO

import express from "express";
import cors from "cors";
import fetch from "node-fetch"; 
import process from "process";
// Importar o dotenv √© uma boa pr√°tica se voc√™ for testar localmente.
// O Render lida com process.env automaticamente, mas a linha abaixo n√£o atrapalha:
// import dotenv from 'dotenv'; dotenv.config(); 

// --- Configura√ß√£o Inicial ---
const app = express(); 

// Vari√°veis de ambiente
const MP_ACCESS_TOKEN = process.env.MP_ACCESS_TOKEN;
// CORRE√á√ÉO: Usamos o link do seu Render para o Webhook
const RENDER_URL = "https://gri-t9jx.onrender.com"; 

if (!MP_ACCESS_TOKEN) {
  console.error("‚ùå MP_ACCESS_TOKEN n√£o definido. O servidor n√£o pode gerar pagamentos.");
}

// Middlewares
app.use(cors());
// Permite que o servidor entenda o JSON e o texto dos webhooks
app.use(express.json());
app.use(express.text({ type: 'application/x-www-form-urlencoded' }));


// --- Rotas ---

// Rota de teste
app.get("/", (req, res) => res.send("‚úÖ Servidor MercadoPago e Express ativo."));

// 1. Rota para Gera√ß√£o de Prefer√™ncia de Pagamento
// CORRE√á√ÉO: O endpoint correto √© /gerar-preferencia, conforme chamado no frontend
app.post("/gerar-preferencia", async (req, res) => {
  try {
    const { 
      valor = 5, 
      titulo = "Produto VIP", 
      quantity = 1, 
      external_reference, // ID do usu√°rio
      back_urls // URLs de retorno
    } = req.body;

    if (!MP_ACCESS_TOKEN) {
         return res.status(503).json({ error: "Servi√ßo indispon√≠vel. Token do Mercado Pago n√£o configurado." });
    }

    // Valida√ß√£o de dados essenciais
    if (typeof valor !== "number" || valor <= 0 || !back_urls || !back_urls.success) {
      return res.status(400).json({ error: "Par√¢metros de pagamento inv√°lidos ou incompletos." });
    }

    const payload = {
      items: [
        {
          title: String(titulo).slice(0, 120),
          quantity: Number(quantity) || 1,
          unit_price: Number((Math.round(valor * 100) / 100).toFixed(2)),
          currency_id: "BRL",
        },
      ],
      back_urls: back_urls, 
      auto_return: "approved",
      external_reference: external_reference || 'sem-referencia', 
      
      // Rota de notifica√ß√£o (Webhook)
      notification_url: `${RENDER_URL}/webhook/mp`, 
    };

    const response = await fetch("https://api.mercadopago.com/checkout/preferences", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${MP_ACCESS_TOKEN}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify(payload),
    });

    const data = await response.json();

    if (!response.ok) {
      console.error("Erro MP criar preference:", data);
      return res.status(response.status).json({ error: data });
    }

    // Retorna o ID da prefer√™ncia para o frontend renderizar o bot√£o
    return res.json({ preferenceId: data.id, init_point: data.init_point, sandbox_init_point: data.sandbox_init_point });
  } catch (err) {
    console.error("‚ùå Erro ao criar pagamento:", err);
    return res.status(500).json({ error: "erro_interno", detail: String(err) });
  }
});

// 2. Rota para Receber Notifica√ß√µes de Webhook do Mercado Pago
app.post("/webhook/mp", (req, res) => {
    // IMPORTANTE: Aqui voc√™ deve implementar a l√≥gica para:
    // 1. Buscar o status real do pagamento usando o resourceId.
    // 2. Se APROVADO, SALVAR o C√≥digo VIP ou a ativa√ß√£o no Firebase.
    
    console.log("Notifica√ß√£o recebida do Mercado Pago:", req.query, req.body);

    const topic = req.query.topic || req.query.type;
    const resourceId = req.query.id || req.query['data.id'];

    if (topic === 'payment' && resourceId) {
        console.log(`Webhook de pagamento recebido para ID: ${resourceId}. Pr√≥xima a√ß√£o: Verificar status e ativar VIP no Firebase.`);
    }

    // Resposta essencial para o Mercado Pago
    res.status(200).send("OK");
});


// --- Inicializa√ß√£o do Servidor ---
const PORT = process.env.PORT || 10000;
app.listen(PORT, () => console.log(`üöÄ Servidor rodando na porta ${PORT}. API URL: ${RENDER_URL}`));
